---
import { configs } from "@/configs";
import { getCategories, getTags } from "@/lib/content";
import "@/styles/global.css";
import { ViewTransitions } from "astro:transitions";

const {
  title,
  description = configs.website.description,
  ogImage = configs.website.ogImage,
  articleCategory,
  articleTags,
  articlePubDate,
  articleAuthor,
} = Astro.props;
const pageTitle =
  title === "root"
    ? configs.website.title
    : `${title} â€¢ ${configs.website.title}`;
const rootURL = new URL("/", Astro.site);
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const ogImageURL = new URL(ogImage, Astro.url).href;

const categories = await getCategories();
const foundCategory =
  articleCategory && categories && categories.length
    ? categories.find((category) => articleCategory === category.id)
    : null;
const tags = await getTags();
const filteredTags =
  articleTags && tags && tags.length
    ? tags.filter((tag) => articleTags.includes(tag.id))
    : null;

// https://schema.org/
const schema = JSON.stringify(
  articlePubDate
    ? {
        "@context": "https://schema.org",
        "@type": "Article",
        publisher: {
          "@type": "Person",
          name: configs.website.author,
          url: rootURL,
        },
        author: {
          "@type": "Person",
          name: configs.website.author,
          url: rootURL,
        },
        url: canonicalURL,
        headline: title,
        description,
        datePublished: articlePubDate,
        dateModified: articlePubDate,
        image: {
          "@type": "ImageObject",
          url: ogImageURL,
          width: 1200,
          height: 600,
        },
        keywords: filteredTags
          ? `${filteredTags.map((tag) => tag.data.title)}`
          : "",
        mainEntityOfPage: {
          "@type": "WebPage",
          "@id": rootURL,
        },
      }
    : {
        "@context": "https://schema.org",
        "@type": "WebSite",
        publisher: {
          "@type": "Person",
          name: configs.website.author,
          url: rootURL,
        },
        url: canonicalURL,
        name: title,
        description,
        mainEntityOfPage: {
          "@type": "WebPage",
          "@id": rootURL,
        },
      },
);
---

<!-- Astro View Transitions: https://docs.astro.build/en/guides/view-transitions/ -->
<ViewTransitions />

<!-- Essentials -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title set:text={pageTitle} />
<meta name="title" content={pageTitle} />
<meta name="description" content={description} />
<meta name="author" content={configs.website.author} />
<link rel="canonical" href={canonicalURL} />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Favicon -->
<link
  rel="apple-touch-icon"
  sizes="180x180"
  href={configs.website.webmanifest.appleTouchIcon}
/>
<link rel="icon" href={configs.website.favicon} />
<link rel="manifest" href="/manifest.webmanifest" />
<meta name="apple-mobile-web-app-title" content={configs.website.title} />
<meta name="application-name" content={configs.website.title} />
<meta
  name="msapplication-TileColor"
  content={configs.website.webmanifest.themeColor}
/>
<meta name="theme-color" content={configs.website.webmanifest.themeColor} />

<!-- Open Graph: https://ogp.me/ -->
<meta property="og:site_name" content={configs.website.title} />
<meta property="og:type" content={articlePubDate ? "article" : "website"} />
<meta
  property="og:title"
  content={title === "root" ? configs.website.title : title}
/>
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:image" content={ogImageURL} />

<!-- Article -->
{
  articlePubDate && (
    <>
      {foundCategory && (
        <meta property="article:section" content={foundCategory.data.title} />
      )}
      {filteredTags &&
        filteredTags.map((tag) => (
          <meta property="article:tag" content={tag.data.title} />
        ))}
      <meta property="article:published_time" content={articlePubDate} />
      <meta
        property="article:author"
        content={articleAuthor || configs.website.author}
      />
    </>
  )
}

<!-- RSS -->
<link
  rel="alternate"
  href="/rss.xml"
  type="application/rss+xml"
  title={configs.website.title}
/>

<!-- Extra -->
<meta name="generator" content={Astro.generator} />

<!-- https://schema.org/ -->
<script is:inline type="application/ld+json" set:html={schema} />
